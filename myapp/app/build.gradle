/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    id 'java'
    id 'eclipse'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.1.1-jre'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}


application {
    // Define the main class for the application.
    mainClass = 'bitcamp.myapp.App'
}


tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// 자바 소스를 컴파일 할 때 적용할 옵션
tasks.withType(JavaCompile).configureEach {
    // 프로젝트의 소스 파일 인코딩을 gradle에게 알려준다.
    // encoding = 어떤 형식으로 저장되어 있는가?
    // $javac -encoding UTF-8 ..
    options.encoding = 'UTF-8'
}

// eclipse 프로젝트 이름을 설정하기
eclipse {
    project {
        name = "myapp"
    }
    jdt {
        sourceCompatibility = 21
        targetCompatibility = 21
        javaRuntimeName = "JavaSE-21"
    }
}
// Gradel로 애플리케이션을 실행했을 때
// 키보드 입력을 표준 입력 스트림으로 연결하는 방법
run {
    standardInput = System.in
}